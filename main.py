"""
Main Entry Point - Orchestrator –¥–ª—è –≤—Å–µ—Ö –º–æ–¥—É–ª–µ–π
"""

import asyncio
import logging
import sys
from pathlib import Path

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s [%(levelname)s] %(message)s',
    datefmt='%Y-%m-%d %H:%M:%S',
    handlers=[
        logging.StreamHandler(sys.stdout)
    ]
)

logger = logging.getLogger(__name__)

# –î–æ–±–∞–≤–∏—Ç—å –ø–∞–ø–∫—É —Å –±–æ—Ç–æ–º –≤ PATH
BOT_DIR = Path(__file__).parent / "trade_bot_programm"
sys.path.insert(0, str(BOT_DIR))

# –ò–º–ø–æ—Ä—Ç—ã
from utils import save_bot_result, print_bot_result, cleanup_old_results


async def run_trading_bot_cycle():
    """
    –ó–∞–ø—É—Å—Ç–∏—Ç—å –ø–æ–ª–Ω—ã–π —Ü–∏–∫–ª —Ç–æ—Ä–≥–æ–≤–æ–≥–æ –±–æ—Ç–∞
    """
    try:
        # –ò–º–ø–æ—Ä—Ç —Ñ—É–Ω–∫—Ü–∏–∏ –∏–∑ –±–æ—Ç–∞
        from bot_runner import run_trading_bot

        logger.info("=" * 60)
        logger.info("üöÄ STARTING TRADING BOT")
        logger.info("=" * 60)

        # –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
        result = await run_trading_bot()

        # –í—ã–≤–æ–¥ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –≤ –∫–æ–Ω—Å–æ–ª—å
        print_bot_result(result)

        # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –≤ —Ñ–∞–π–ª
        saved_path = save_bot_result(result, output_dir="bot_results")

        if saved_path:
            logger.info(f"üìÅ Result saved to: {saved_path}")

        # –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ (–æ—Å—Ç–∞–≤–∏—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–µ 10)
        cleanup_old_results(results_dir="bot_results", keep_last=10)

        return result

    except Exception as e:
        logger.error(f"‚ùå Critical error: {e}", exc_info=True)
        return {
            'result': 'ERROR',
            'error': str(e),
            'stats': {}
        }


async def main():
    """
    –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
    –í –±—É–¥—É—â–µ–º –∑–¥–µ—Å—å –±—É–¥–µ—Ç –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å Telegram –±–æ—Ç–æ–º
    """

    # === –°–ï–ô–ß–ê–°: –ü—Ä–æ—Å—Ç–æ–π –∑–∞–ø—É—Å–∫ –±–æ—Ç–∞ ===
    result = await run_trading_bot_cycle()

    # === –ë–£–î–£–©–ï–ï: –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å Telegram ===
    # from telegram_bot.bot import TelegramBot
    # telegram_bot = TelegramBot()
    # await telegram_bot.send_signals(result)

    return result


if __name__ == "__main__":
    try:
        result = asyncio.run(main())

        # Exit code based on result
        if result.get('result') in ['SUCCESS', 'NO_VALIDATED_SIGNALS']:
            sys.exit(0)
        else:
            sys.exit(1)

    except KeyboardInterrupt:
        logger.info("\n‚èπÔ∏è  Bot stopped by user")
        sys.exit(0)

    except Exception as e:
        logger.error(f"‚ùå Fatal error: {e}", exc_info=True)
        sys.exit(1)